<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xkd.mapper.MeetingMapper" >
  <resultMap id="BaseResultMap" type="Meeting" >
    <result column="id" property="id" jdbcType="CHAR" />
    <result column="meetingName" property="meetingName" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="county" property="county" jdbcType="VARCHAR" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="startTime" property="startTime" jdbcType="CHAR" />
    <result column="endTime" property="endTime" jdbcType="CHAR" />
    <result column="dates" property="dates" jdbcType="CHAR" />
    <result column="meetingStatus" property="meetingStatus" jdbcType="VARCHAR" />
    <result column="meetingType" property="meetingType" jdbcType="VARCHAR" />
    <result column="leader" property="leader" jdbcType="VARCHAR" />
    <result column="contacter" property="contacter" jdbcType="CHAR" />
    <result column="mrequire" property="mrequire" jdbcType="VARCHAR" />
    <result column="theme" property="theme" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="meetingContent" property="meetingContent" jdbcType="VARCHAR" />
    <result column="travelArrangement" property="travelArrangement" jdbcType="VARCHAR" />
    <result column="teacherId" property="teacherId" jdbcType="VARCHAR" />
    <result column="exerciseId" property="exerciseId" jdbcType="CHAR" />
    <result column="invitationId" property="invitationId" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="updateDate" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="createdBy" property="createdBy" jdbcType="CHAR" />
    <result column="updatedBy" property="updatedBy" jdbcType="CHAR" />
    <result column="createTime" property="createTime" jdbcType="CHAR" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="attended" property="attended" jdbcType="INTEGER" />
    <result column="attributeContent" property="attributeContent" jdbcType="VARCHAR" />
    <result column="ticketRights" property="ticketRights" jdbcType="VARCHAR" />
    <result column="meetingImage" property="meetingImage" jdbcType="VARCHAR" />
    <result column="meetingDetail" property="meetingDetail" jdbcType="VARCHAR" />
    <result column="departmentId" property="departmentId" jdbcType="VARCHAR" />
    <result column="departmentName" property="departmentName" jdbcType="VARCHAR" />
    <result column="sendMessageFlag" property="sendMessageFlag" jdbcType="CHAR" />
    <result column="mobile" property="mobile" jdbcType="CHAR" />
    <result column="pcCompanyId " property="pcCompanyId" jdbcType="CHAR" />
      <result column="getTicketNumber" property="getTicketNumber" jdbcType="INTEGER" />
      <result column="ticketNumber" property="ticketNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,meetingName,introduce,province,city,county,place,startTime,endTime,dates,meetingType,meetingStatus,leader,contacter,mrequire,theme,content,meetingContent,travelArrangement,
    teacherId,exerciseId,status,updateDate,invitationId,updateDate,createDate,createdBy,updatedBy,attributeContent,ticketRights,meetingImage,meetingDetail,departmentId,sendMessageFlag,mobile,pcCompanyId
  </sql>
  
  <sql id="Base_Column_List_Order" >
    m.id,m.meetingName,m.introduce,m.province,m.city,m.county,m.place,m.startTime,m.endTime,m.dates,m.meetingType,m.meetingStatus,m.leader,m.contacter,m.mrequire,m.theme,m.content,m.meetingContent,
    m.travelArrangement,m.teacherId,m.exerciseId,m.status,m.updateDate,m.createDate,m.createdBy,m.updatedBy,m.attributeContent,m.ticketRights,m.meetingImage,m.meetingDetail,m.departmentId,m.sendMessageFlag,m.mobile,m.pcCompanyId
  </sql>
  
  <select id="selectMeetingById" resultMap="BaseResultMap">
  	select
    m.id,m.meetingName,m.introduce,m.province,m.city,m.county,m.place,m.startTime,m.endTime,m.dates,m.meetingType,m.meetingStatus,m.leader,m.contacter,m.mrequire,m.theme,m.content,m.meetingContent,
    m.travelArrangement,m.teacherId,m.exerciseId,m.status,m.updateDate,m.createDate,m.createdBy,m.updatedBy,m.attributeContent,m.ticketRights,m.meetingImage,m.meetingDetail,m.departmentId,m.sendMessageFlag,m.mobile,
    (select departmentName from dc_department where id =  m.departmentId) as departmentName,m.pcCompanyId
    from dc_meeting m where  id=#{meetingId}
  </select>
 
 <select id="selectCompanysLogo" resultType="java.util.HashMap">
 	
 	select c.id,company_name,c.logo from (select * from dc_meeting_user where ustatus=0 and meetingid = #{meetingId} ) mu 
	
 	INNER JOIN dc_company c on mu.companyid = c.id where c.status = 0
 
 </select>
				
  <select id="selectMeetingByParam" resultMap="BaseResultMap" >

      SELECT
      m.id,
      m.meetingName,
      m.introduce,
      m.province,
      m.city,
      m.county,
      m.place,
      m.startTime,
      m.endTime,
      m.dates,
      m.meetingType,
      m.meetingStatus,
      m.leader,
      m.contacter,
      m.mrequire,
      m.theme,
      m.content,
      m.meetingContent,
      m.travelArrangement,
      m.teacherId,
      m.exerciseId,
      m.STATUS,
      m.updateDate,
      m.invitationId,
      m.updateDate,
      m.createDate,
      m.createdBy,
      m.updatedBy,
      d.departmentName,
      m.departmentId,
      m.sendMessageFlag,
      m.mobile,
      DATE_FORMAT(m.updateDate,'%Y-%m-%d %H:%i:%s')  as createTime,
      (
      SELECT
      count(1)
      FROM
      dc_meeting_user mu
      LEFT JOIN dc_company c ON mu.companyId = c.id
      LEFT JOIN dc_user_hotel h ON mu.id = h.meetingUserId
      LEFT JOIN dc_user u ON mu.userId = u.id
      WHERE
      c. STATUS = 0
      AND u. STATUS = 0
      AND mu.meetingId = m.id
      AND mu. STATUS = '已参会'
      ) AS attended,
      (
      SELECT
      count(1)
      FROM
      dc_meeting_user mu
      LEFT JOIN dc_company c ON mu.companyId = c.id
      LEFT JOIN dc_user_hotel h ON mu.id = h.meetingUserId
      LEFT JOIN dc_user u ON mu.userId = u.id
      WHERE
      c. STATUS = 0
      AND u. STATUS = 0
      AND mu.meetingId = m.id
      ) AS total,
      (select SUM(getTicketNumber) from dc_order_ticket
      where orderId in (select id from dc_user_order
      where meetingId = m.id and  payAgain !=2 and payStatus = '1')) AS getTicketNumber,
      (select SUM(ticketNumber) from dc_order_ticket
      where orderId in (select id from dc_user_order
      where meetingId = m.id and  payAgain !=2 and payStatus = '1')) AS ticketNumber
      FROM
      (
      SELECT
      *
      FROM
      dc_meeting mt
      WHERE
      STATUS = 0
      ORDER BY
      createDate DESC
      ) m  left join dc_department d on m.departmentId = d.id
      WHERE
      m.departmentId in
      <foreach collection="departmentIdList"  item="departmentId" index="" separator=","  open="(" close=")" >
          #{departmentId}
      </foreach>
      <if test="pcCompanyId != null and pcCompanyId !='' ">
          and  m.pcCompanyId = #{pcCompanyId}
      </if>
    <if test="meetingType != null and meetingType !='' ">
    	and  ${meetingType}
    </if>
    <if test="meetingStatus != null and meetingStatus !='' ">
    	and  ${meetingStatus}
    </if>
    <if test="mname != null and mname !='' ">
    	and  m.meetingname = #{mname}
    </if>
    <if test="startTime != null and startTime !='' ">
    	and  m.startTime &gt;= #{startTime}
    </if>
    <if test="endTime != null and endTime !='' ">
    	and  m.startTime &lt;= #{endTime}
    </if>
    <if test="address != null and address !='' ">
    	and  ${address} 
    </if>
    <if test="meetingName != null and meetingName !='' ">
    	and  ${meetingName}
    </if>
    <if test="teacherIds != null and teacherIds != '' ">
    	and  ${teacherIds}
    </if>
    
    limit #{currentPageInt},#{pageSizeInt}
    
  </select>
  
   <select id="getMeetingCountByParam" resultType="java.lang.Integer" >
    
    select count(1)  from (select * from dc_meeting where status = 0 ) m where
       m.departmentId in
       <foreach collection="departmentIdList"  item="departmentId" index="" separator=","  open="(" close=")" >
           #{departmentId}
       </foreach>
       <if test="pcCompanyId != null and pcCompanyId !='' ">
           and  m.pcCompanyId = #{pcCompanyId}
       </if>
     <if test="meetingType != null and meetingType !='' ">
    	and  ${meetingType}
    </if>
    <if test="meetingStatus != null and meetingStatus !='' ">
    	and  ${meetingStatus}
    </if>
    <if test="mname != null and mname !='' ">
    	and  m.meetingname = #{mname}
    </if>
    <if test="startTime != null and startTime !='' ">
    	and  m.startTime &gt;= #{startTime}
    </if>
    <if test="endTime != null and endTime !='' ">
    	and  m.startTime &lt;= #{endTime}
    </if>
    <if test="address != null and address !='' ">
    	and  ${address} 
    </if>
    <if test="meetingName != null and meetingName !='' ">
    	and  ${meetingName}
    </if>
    <if test="teacherIds != null and teacherIds != '' ">
    	and  ${teacherIds}
    </if>
  </select>
  
  <update id="updateMeetingById">
  
  	update dc_meeting  set
  	
  	meetingName=#{meetingName},introduce=#{introduce},place=#{place},startTime=#{startTime},meetingContent=#{meetingContent},
  	endTime=#{endTime},dates=#{dates},meetingType=#{meetingType},meetingStatus=#{meetingStatus},leader=#{leader},contacter=#{contacter},mrequire=#{mrequire},theme=#{theme},
  	content=#{content},travelArrangement=#{travelArrangement},teacherId=#{teacherId},status=#{status},updateDate=NOW(),
  	updatedBy=#{updatedBy},province=#{province},city=#{city},county=#{county},attributeContent=#{attributeContent},
  	ticketRights=#{ticketRights},meetingImage=#{meetingImage},meetingDetail=#{meetingDetail},
  	departmentId=#{departmentId},sendMessageFlag=#{sendMessageFlag},mobile=#{mobile}
    
    where id = #{id}
  
  </update>
  
  <update id="deleteMeetingById">
  
  	update dc_meeting  set status = 2  where  id in ${ids}
  
  </update>

    <update id="updateMeetingContentById" parameterType="Meeting">
        update dc_meeting
        <set>
            <if test="meetingName != null and meetingName !='' " >
                meetingName = #{meetingName},
            </if>
            <if test="introduce != null and introduce !='' " >
                introduce = #{introduce},
            </if>
            <if test="place != null and place !='' " >
                place = #{place},
            </if>
            <if test="startTime != null and startTime !='' " >
                startTime = #{startTime},
            </if>
            <if test="endTime != null and endTime !='' " >
                endTime = #{endTime},
            </if>
            <if test="dates != null and dates !='' " >
                dates = #{dates},
            </if>
            <if test="meetingType != null and meetingType !='' " >
                meetingType=#{meetingType},
            </if>
            <if test="meetingStatus != null and meetingStatus !='' " >
                meetingStatus=#{meetingStatus},
            </if>
            <if test="leader != null and leader !='' " >
                leader = #{leader},
            </if>
            <if test="contacter != null and contacter !='' " >
                contacter = #{contacter},
            </if>
            <if test="mrequire != null and mrequire !='' " >
                mrequire = #{mrequire},
            </if>
            <if test="theme != null and theme !='' " >
                theme = #{theme},
            </if>
            <if test="content != null and content !='' " >
                content = #{content},
            </if>
            <if test="meetingContent != null and meetingContent !='' " >
                meetingContent = #{meetingContent},
            </if>
            <if test="travelArrangement != null and travelArrangement !='' " >
                travelArrangement = #{travelArrangement},
            </if>
            <if test="teacherId != null and teacherId !='' " >
                teacherId = #{teacherId},
            </if>
            <if test="status != null and status !='' " >
                status = #{status},
            </if>
            <if test="province != null and province !='' " >
                province = #{province},
            </if>
            <if test="city != null and city !='' " >
                city = #{city},
            </if>
            <if test="county != null and county !='' " >
                county = #{county},
            </if>
            <if test="attributeContent != null and attributeContent !='' " >
                attributeContent = #{attributeContent},
            </if>
            <if test="ticketRights != null and ticketRights !='' " >
                ticketRights = #{ticketRights},
            </if>
            <if test="meetingImage != null and meetingImage !='' " >
                meetingImage = #{meetingImage},
            </if>
            <if test="meetingDetail != null and meetingDetail !='' " >
                meetingDetail = #{meetingDetail},
            </if>
        </set>
        updateDate=NOW()
        where id=#{id}
    </update>
  
  <insert id="saveMeeting"  parameterType="Meeting">

  	insert into  dc_meeting(id,meetingName,introduce,place,startTime,content,endTime,dates,meetingType,meetingStatus,leader,contacter,mrequire,theme,travelArrangement,
    teacherId,exerciseId,status,updateDate,meetingContent,createdBy,createDate,updatedBy,province,city,county,attributeContent,ticketRights,meetingImage,meetingDetail,departmentId,sendMessageFlag,mobile,pcCompanyId) values(#{id},#{meetingName},#{introduce},#{place},#{startTime},#{content},
  	#{endTime},#{dates},#{meetingType},#{meetingStatus},#{leader},#{contacter},#{mrequire},#{theme},#{travelArrangement},#{teacherId},#{exerciseId},#{status},
  	NOW(),#{meetingContent},#{createdBy},NOW(),#{updatedBy},#{province},#{city},#{county},#{attributeContent},#{ticketRights},#{meetingImage},#{meetingDetail},#{departmentId},#{sendMessageFlag},#{mobile},#{pcCompanyId})
  	
  </insert>
  
  
  <select id="selectMeetingByCompanyId" resultType="java.util.Map">
		  SELECT
			u.id AS id,
			u.meetingId,
			u.enrollTime,
			m.meetingName,
			m.startTime,
			m.endTime,
			m.dates,
			m.meetingType,
			m.place,
			c.companyAdviserId,
			du1.uname AS companyAdviserName,
			c.companyDirectorId,
			du2.uname AS companyDirectorName,
			c.channel,
			u.mgroup,
			c.companyName,
			u.enrollTime,
			du3.uname AS customerName,
			du3.mobile AS contactPhone,
			c.userType,
			CASE
		WHEN u.learnStatus = 0 THEN
			'新训'
		WHEN u.learnStatus = 1 THEN
			'复训'
		END AS learnStatus
		FROM
			dc_meeting_user u
		LEFT JOIN dc_meeting m ON u.meetingId = m.id
		LEFT JOIN dc_company c ON u.companyId = c.id
		LEFT JOIN dc_user du1 ON du1.id = c.companyAdviserId
		LEFT JOIN dc_user du2 ON du2.id = c.companyDirectorId
		LEFT JOIN dc_user du3 ON du3.id = u.userId
		where u.companyId=#{companyId}
  </select>
  
  
  
  <select id="selectUserExcerciseByCompanyId"  resultType="java.util.Map"  >

      SELECT
			e.id,
      ex.id as exerciseId,
			ex.title,
			u.uname,
			u.id as userId,
      e.submitDate
		FROM
			dc_wj_user_exam e
		INNER JOIN (select * from dc_user   u where u.id in (select userId from dc_user_company uc  where uc.companyId=#{companyId} )) u ON e.openId = u.weixin
  		INNER JOIN dc_wj_exercise ex ON ex.id = e.exerciseId
  </select>

    <select id="selectDetailByspreadId" resultType="java.util.Map">

        select uo.* ,u.uname,u.mobile
        from dc_user_spread us LEFT  JOIN  dc_user_order uo on uo.userSpreadId = us.id
        LEFT JOIN  dc_user u on uo.payedUserId = u.id
        where us.id = #{userSpreadId} and uo.payAgain !=2 and uo.payStatus = '1'

    </select>

    <select id="selectCountDetailByspreadId" resultType="java.lang.Integer">

        select count(1)
        from dc_user_spread us LEFT  JOIN  dc_user_order uo on uo.userSpreadId = us.id
        LEFT JOIN  dc_user u on uo.payedUserId = u.id
        where us.id = #{userSpreadId} and uo.payAgain !=2 and uo.payStatus = '1'

    </select>



    <select id="selectUserSpreadsByMeetingId" resultType="java.util.Map">

       select  u.id as userId, u.uname,u.mobile,us.id as userSpreadId,
        (select SUM(ot.ticketNumber) from dc_user_order uo
        LEFT  JOIN  dc_order_ticket ot on ot.orderId = uo.id where uo.payAgain != 1 and uo.payStatus = '1' and uo.userSpreadId = us.id ) AS totalNumber
        from dc_meeting m INNER  JOIN dc_user_spread us on m.id = us.meetingId
        INNER JOIN  dc_user u on us.userId = u.id
        where m.status = 0 and m.id = #{meetingId} and us.status = 0

    </select>

    <select id="selectTotalUserSpreadsByMeetingId" resultType="java.lang.Integer">

        select  count(1)
        from dc_meeting m INNER  JOIN dc_user_spread us on m.id = us.meetingId
        INNER JOIN  dc_user u on us.userId = u.id
        where m.status = 0 and m.id = #{meetingId} and us.status = 0

    </select>



    <select id="selectUserSpreadByMeetingIdUserId" resultType="java.util.Map">

        select  *  from dc_user_spread
        where meetingId = #{meetingId} and userId = #{userId} and status = 0

    </select>




    <delete id="deleteMeetingUserByCompanyIds"  >
  	delete from dc_meeting_user where companyId in ${companyIds}
  </delete>

 <insert id="saveUserSpread">
    INSERT INTO dc_user_spread
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null"> id, </if>
        <if test="userId != null"> userId,</if>
        <if test="createDate != null ">createDate,</if>
        <if test="updateDate != null ">updateDate,</if>
        <if test="createdBy != null ">createdBy,</if>
        <if test="updatedBy != null ">updatedBy,</if>
        <if test="meetingId != null ">meetingId,</if>
    </trim>
    VALUES
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null"> #{id}, </if>
        <if test="userId != null"> #{userId}, </if>
        <if test="createDate != null"> #{createDate}, </if>
        <if test="updateDate != null"> #{updateDate}, </if>
        <if test="createdBy != null"> #{createdBy}, </if>
        <if test="updatedBy != null"> #{updatedBy}, </if>
        <if test="meetingId != null"> #{meetingId}, </if>
    </trim>
 </insert>

 <update id="updateUserSpread">
    UPDATE dc_user_spread
    <set>
        <if test="userId != null"> userId = #{userId}, </if>
        <if test="createDate != null"> createDate = #{createDate}, </if>
        <if test="updateDate != null"> updateDate = #{updateDate}, </if>
        <if test="createdBy != null"> createdBy = #{createdBy}, </if>
        <if test="updatedBy != null"> updatedBy = #{updatedBy} </if>
        <if test="meetingId != null"> meetingId = #{meetingId} </if>
    </set>
    WHERE id = #{id}
 </update>


    <update id="deleteUserSpreadsByIds">
        update dc_user_spread   set status=2  where id in
        <foreach collection="idList"  item="id" index="" separator=","  open="(" close=")" >
            #{id}
        </foreach>
    </update>


</mapper>