package com.kuangchi.sdd.consumeConsole.accountRelevant.dao;

import java.util.List;
import java.util.Map;

public interface AccountRelevantDao {
	public List<Map> getAccountTypeByMap(Map map);
	public Integer countAccountTypeByMap(Map map);
	public void addAccountType(Map map);
	public  void deleteAccountType(String nums);
	public boolean ifExistUsingAccountType(String typeNum);
	public Map getAccountTypeMap(String typeNum);
	public void updateAccountType(Map map);  
	public List<Map> getAllAccountType();
	public List<Map> initType();
	public List<Map> getRegulationNames();
	public List<Map> getPositions();
	public List<Map> getStaffNames();
	public List<Map> getStaffDepts();
	public void addRegulation(Map map);
	public List<Map> getAllRegulations(Map map);
	public Integer countAllRegulations(Map map);
	public void delRegulation(String id);
	public boolean ifExistRegulation(String accountTypeNum);
	public void updateRegulation(Map map);
	public List<Map> initRegulation();
	public String getRegulationByAccountTypeNum(String accountTypeNum);
	public List<Map>getStaffsByCondition(Map map);
	public boolean ifExistAccount(Map map);
	public void openDefaultAccountByType(Map map);
	public void reChargeEachStaff(Map map);
	public void recordAccountFlow(Map map);
	public Map getStaffSimpleInfo(String staffNum);
	public Map getAccountSimpleInfo(Map map);
	public List<Map> getAllAcountFlow(Map map);
	public Integer countAllAcountFlow(Map map);
	public List<Map> getStaffNumListBydeptNum(String deptNum);
	public List<Map> getMoneyPoolNumListByAccountType(Map map);
	public List<Map> getMoneyPoolNumListByStaffNum(String staffNum);
	public List<Map> getMoneyPoolNumListByDeptNum(String deptNum);
	public Map getMoneyPoolInfo(String poolNum);
	public void chargeFundEachStaff(Map map);
	public void recordFundFlow(Map map);
	public void recordSubsidizeAccountFlow(Map map);
	public void recordDeductAccountFlow(Map map);
	public Map viewRegulation(String id);
	public List<Map> searchAccount(Map map);
	public Integer countSearchAccount(Map map);
	public Map getAccountBalance(String accountNum);
	public void closeAccount(String accountNum);
	public List<Map> searchCloseAccount(Map map);
	public Integer countCloseSearchAccount(Map map);
	public void addOneStaffDaily(Map map);
	public boolean ifExistStaffDaily(Map map);
	public List<Map> getStaffRechargeDailyInfo(Map map);
	public void updateStaffDailyRecord(Map map);
	public List<Map> getDeptNums();
	public List<Map> getListByDeptDailyOneByOne(Map map);
	public boolean ifExistDeptDaily(Map map);
	public Map getDeptSimpleInfo(String deptNum);
	public void addOneDeptDaily(Map map);
	public void updateDeptDailyRecord(Map map);
	public boolean ifDeviceUseAccountType(String accountTypeNum);
	public void frozenAccount(String accountNum);
	public void reFrozenAccount(String accountNum);
	public void addOneStaffBZDaily(Map map);
	public boolean ifExistStaffBZDaily(Map map);
	public List<Map> getStaffBZDailyInfo(Map map);
	public void updateStaffBZDailyRecord(Map map);
	public boolean ifExistDeptBZDaily(Map map);
	public void addOneDeptBZDaily(Map map);
	public List<Map> getListByDeptBZDailyOneByOne(Map map);
	public void updateDeptBZDailyRecord(Map map);
	public List<Map> getStaffConsumeCards(String staffNum);
	public List<Map> getStaffAccountTypeDevices(String accountTypeNum);
	public void recordFundFlowForCloseAcc(Map map);
	public void backToPool(Map map);
	public List<Map> getDeptList(Map map);
	public Integer countDeptList(Map map);
	public boolean checkAccTypeName(String accountTypeName);
	public String getRegulationByID(String regulationId);
}
