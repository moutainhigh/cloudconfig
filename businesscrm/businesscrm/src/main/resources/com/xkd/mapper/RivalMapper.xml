<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xkd.mapper.RivalMapper" >

    <insert id="insertRival">
        INSERT INTO dc_rival
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null"> id, </if>
            <if test="rivalName != null"> rivalName, </if>
            <if test="size != null"> size, </if>
            <if test="rivalDegreeId != null"> rivalDegreeId, </if>
            <if test="departmentId != null"> departmentId, </if>
            <if test="pcCompanyId != null"> pcCompanyId, </if>
            <if test="advantage != null"> advantage, </if>
            <if test="disAdvantage != null"> disAdvantage, </if>
            <if test="policies != null"> policies, </if>
            <if test="saleAnalysis != null"> saleAnalysis, </if>
            <if test="marketAnalysis != null"> marketAnalysis, </if>
            <if test="remark != null"> remark, </if>
            <if test="status != null"> status, </if>
            <if test="createdBy != null"> createdBy, </if>
            <if test="createDate != null"> createDate, </if>
            <if test="updatedBy != null"> updatedBy, </if>
            <if test="updateDate != null"> updateDate, </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id}, </if>
            <if test="rivalName != null"> #{rivalName}, </if>
            <if test="size != null"> #{size}, </if>
            <if test="rivalDegreeId != null"> #{rivalDegreeId}, </if>
            <if test="departmentId != null"> #{departmentId}, </if>
            <if test="pcCompanyId != null"> #{pcCompanyId}, </if>
            <if test="advantage != null"> #{advantage}, </if>
            <if test="disAdvantage != null"> #{disAdvantage}, </if>
            <if test="policies != null"> #{policies}, </if>
            <if test="saleAnalysis != null"> #{saleAnalysis}, </if>
            <if test="marketAnalysis != null"> #{marketAnalysis}, </if>
            <if test="remark != null"> #{remark}, </if>
            <if test="status != null"> #{status}, </if>
            <if test="createdBy != null"> #{createdBy}, </if>
            <if test="createDate != null"> #{createDate}, </if>
            <if test="updatedBy != null"> #{updatedBy}, </if>
            <if test="updateDate != null"> #{updateDate}, </if>
        </trim>
    </insert>


    <update id="updateRival">
        UPDATE dc_rival
        <set>
            <if test="id != null"> id = #{id}, </if>
            <if test="rivalName != null"> rivalName = #{rivalName}, </if>
            <if test="size != null"> size = #{size}, </if>
            <if test="rivalDegreeId != null"> rivalDegreeId = #{rivalDegreeId}, </if>
            <if test="departmentId != null"> departmentId = #{departmentId}, </if>
            <if test="pcCompanyId != null"> pcCompanyId = #{pcCompanyId}, </if>
            <if test="advantage != null"> advantage = #{advantage}, </if>
            <if test="disAdvantage != null"> disAdvantage = #{disAdvantage}, </if>
            <if test="policies != null"> policies = #{policies}, </if>
            <if test="saleAnalysis != null"> saleAnalysis = #{saleAnalysis}, </if>
            <if test="marketAnalysis != null"> marketAnalysis = #{marketAnalysis}, </if>
            <if test="remark != null"> remark = #{remark}, </if>
            <if test="status != null"> status = #{status}, </if>
            <if test="createdBy != null"> createdBy = #{createdBy}, </if>
            <if test="createDate != null"> createDate = #{createDate}, </if>
            <if test="updatedBy != null"> updatedBy = #{updatedBy}, </if>
            <if test="updateDate != null"> updateDate = #{updateDate} </if>
        </set>
        WHERE id = #{id}
    </update>



    <select id="selectRivalByName" resultType="map">
       select * from dc_rival d where d.rivalName=#{rivalName} and d.pcCompanyId=#{pcCompanyId}
    </select>


    <update id="deleteByIds">
        update dc_rival r set r.status=2 where r.id in
        <foreach collection="idList" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


    <select id="searchRival" resultType="map">
        select
            d.id,
            d.rivalName,
            d.size,
            d.advantage,
            d.disAdvantage,
            d.policies,
            d.saleAnalysis,
            d.marketAnalysis,
            d.remark,
            DATE_FORMAT(d.createDate,'%Y-%m-%d %H:%i:%s') as createDate,
            du1.uname as createdByName,
            d.createdBy,
            d.rivalDegreeId,
            dic1.value as rivalDegree,
            dep.departmentName
         from dc_rival d
            left join dc_user du1 on d.createdBy=du1.id
          left join dc_dictionary dic1 on d.rivalDegreeId=dic1.id
          left join dc_department dep on dep.id=d.departmentId
        where d.status=0 and   d.rivalName like '%${searchValue}%'
        <if test="departmentIdList!=null and departmentIdList.size!=0">
            and d.departmentId in
            <foreach collection="departmentIdList" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        limit #{start},#{pageSize}
    </select>


    <select id="searchRivalCount" resultType="int">
        select
          count(1)
        from dc_rival d
        where d.status=0 and  d.rivalName like '%${searchValue}%'
        <if test="departmentIdList!=null and departmentIdList.size!=0">
            and d.departmentId in
            <foreach collection="departmentIdList" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>



    <select id="selectRivalById" resultType="map">
        select
            d.id,
            d.rivalName,
            d.size,
            d.advantage,
            d.disAdvantage,
            d.policies,
            d.saleAnalysis,
            d.marketAnalysis,
            d.remark,
            DATE_FORMAT(d.createDate,'%Y-%m-%d %H:%i:%s') as createDate,
            DATE_FORMAT(d.updateDate,'%Y-%m-%d %H:%i:%s') as updateDate,
            du1.uname as createdByName,
            du2.uname as updatedByName,
            d.createdBy,
            d.rivalDegreeId,
            dic1.value as rivalDegree,
            dep.departmentName as departmentName,
            d.departmentId
         from dc_rival d
            left join dc_user du1 on d.createdBy=du1.id
            left join dc_user du2 on d.updatedBy=du2.id
          left join dc_dictionary dic1 on d.rivalDegreeId=dic1.id
          left join dc_department  dep on d.departmentId=dep.id
          where d.id=#{id}
    </select>

</mapper>