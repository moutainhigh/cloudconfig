<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xkd.mapper.TicketMapper" >

    <insert id="saveTickets">
        insert into dc_ticket(id,ticketType,price,saving,initSaving,meetingId,status) values
         <foreach collection="tickets" index="" item="ticket" separator=",">
             (uuid(),#{ticket.ticketType},#{ticket.price}*100,#{ticket.saving},#{ticket.initSaving},#{ticket.meetingId},0)
         </foreach>
    </insert>

    <update id="updateTicketById">
        update  dc_ticket  set  ticketType = #{ticketType},saving=#{saving},status=#{status},price=#{price}*100 where id = #{id}
    </update>

    <update id="updateTicketSavingById">
        update dc_ticket set saving = saving - #{number} where id = #{ticketId}
    </update>
    <update id="updateUserTicketById">

        update dc_user_order

        <set>
        <if test="userId != null" >
            userId=#{userId} ,
        </if>
        <if test="orderName != null" >
            orderName=#{orderName} ,
        </if>
        <if test="mhtOrderNo != null" >
            mhtOrderNo=#{mhtOrderNo} ,
        </if>
        <if test="mhtOrderAmt != null" >
            mhtOrderAmt=#{mhtOrderAmt} ,
        </if>
        <if test="mhtOrderStartTime != null" >
            mhtOrderStartTime=#{mhtOrderStartTime} ,
        </if>
        <if test="channelOrderNo != null" >
            channelOrderNo=#{channelOrderNo} ,
        </if>
        <if test="payTime != null" >
            payTime=#{payTime} ,
        </if>
        <if test="payConsumerId != null" >
            payConsumerId=#{payConsumerId} ,
        </if>
        <if test="channelOrderNo != null" >
            channelOrderNo=#{channelOrderNo} ,
        </if>
        <if test="payStatus != null" >
            payStatus=#{payStatus},
        </if>
        <if test="status != null" >
            status=#{status},
        </if>
        <if test="userSpreadId != null" >
            userSpreadId=#{userSpreadId},
        </if>
        <if test="spreadSettingId != null" >
            spreadSettingId=#{spreadSettingId},
        </if>
        </set>

        where id=#{id}

    </update>

    <update id="ensureGetTickets">
        update dc_order_ticket set getTicketNumber = getTicketNumber + #{getTicketNumber} where id = #{orderTecketId}
    </update>

    <select id="selectTicketsByMeetingId" resultType="java.util.Map">
        select id,ticketType,concat(saving,'') as saving,concat(initSaving,'') as initSaving,price/100 as price,meetingId,status from dc_ticket where meetingId = #{meetingId} and status = 0
    </select>

    <select id="getTicketSavingByTicketId" resultType="java.lang.Integer">
        select saving from dc_ticket where id = #{ticketId} and status = 0
    </select>

    <select id="selectTicketById" resultType="java.util.Map">
        select *  from dc_ticket where id = #{ticketId}
    </select>

    <select id="selectUserOrderByOrderNo" resultType="java.util.Map">
        select id,userId,orderName,mhtOrderNo,mhtOrderAmt,orderTime,mhtOrderStartTime,channelOrderNo,
        payTime,payConsumerId,payStatus,meetingId,status,companyId,payedUserId,CONCAT(payAgain,'') as payAgain,userSpreadId,spreadSettingId
        from dc_user_order where mhtOrderNo = #{orderNo}
    </select>

    <select id="selectUserOrderById" resultType="java.util.Map">
        select id,userId,orderName,mhtOrderNo,mhtOrderAmt,orderTime,mhtOrderStartTime,channelOrderNo,
        payTime,payConsumerId,payStatus,meetingId,status,companyId,payedUserId,userSpreadId,spreadSettingId
        from dc_user_order where id = #{id}
    </select>

    <select id="selectTicketsByContent" resultType="java.util.Map">

        select t.orderId,t.mhtOrderNo,t.mhtOrderStartTime,t.orderTime,t.userId,t.mobile,t.uname,t.mhtOrderAmt,t.attendmeetingTime,t.enrollTime,
        t.meetingId,t.mgroup,t.trainingSituation,t.trainingResultLevel,t.trainingImpactSssessment,t.status,t.star,t.need,t.needDetail,t.updateDate,t.companyName,
        right(t.payStatus,3) as payStatus,t.mobile,t.uname,t.email,t.companyName,t.idcard,t.station from (SELECT uo.id as orderId,uo.mhtOrderNo,uo.mhtOrderStartTime,
        DATE_FORMAT(uo.orderTime,'%Y-%m-%d %H:%i:%s') as orderTime,
        uo.userId,u.mobile,u.uname,u.email,u.companyName,u.idcard,u.station,uo.mhtOrderAmt/100 as mhtOrderAmt,(case when uo.payStatus = 0 then '2_待付款' when uo.payStatus = 1 then '1_已付款' else '3_已取消' end) payStatus,
        mu.companyId,mu.attendmeetingTime,DATE_FORMAT(mu.enrollTime, "%Y-%m-%d") as enrollTime,mu.meetingId,mu.mgroup,mu.trainingSituation,mu.trainingResultLevel,
        mu.trainingImpactSssessment,mu.status,mu.star,mu.need,mu.needDetail,mu.updateDate
        FROM (select * from dc_user_order where meetingId = #{meetingId} and  payAgain !=2) uo INNER JOIN dc_meeting_people u on uo.payedUserId = u.id INNER JOIN
        (select * from dc_meeting_user where meetingId = #{meetingId})  mu on u.id = mu.userId and mu.meetingId = uo.meetingId   where 1=1

        <if test="content != null and content != '' ">
            and (u.uname like concat('%',#{content},'%') or u.mobile like concat('%',#{content},'%'))
        </if>
        <if test="payStatus != null and payStatus != '' ">
            and (uo.payStatus = #{payStatus})
        </if>
        <if test="ticketType != null and ticketType != '' ">
            and (uo.id in (select orderId from dc_order_ticket where ticketId in (select id from dc_ticket where ticketType = #{ticketType} and meetingId = #{meetingId})))
        </if>
        <if test="mgroup != null and mgroup != '' ">
            and (mu.mgroup like concat('%',#{mgroup},'%'))
        </if>

        ORDER BY payStatus asc) t  ORDER BY orderTime desc

        limit #{currentPageInt},#{pageSizeInt}



    </select>

    <select id="selectTicketsTotalByContent" resultType="java.lang.Integer">
        SELECT  count(1)
        FROM (select * from dc_user_order where meetingId = #{meetingId} and  payAgain !=2) uo inner JOIN dc_meeting_people u on uo.payedUserId = u.id inner JOIN
        (select * from dc_meeting_user where meetingId = #{meetingId})  mu on u.id = mu.userId and mu.meetingId = uo.meetingId  where 1=1

        <if test="content != null and content != '' ">
            and (u.uname like concat('%',#{content},'%') or u.mobile like concat('%',#{content},'%'))
        </if>
        <if test="payStatus != null and payStatus != '' ">
            and (uo.payStatus = #{payStatus})
        </if>
        <if test="ticketType != null and ticketType != '' ">
            and (uo.id in (select orderId from dc_order_ticket where ticketId in (select id from dc_ticket where ticketType = #{ticketType} and meetingId = #{meetingId})))
        </if>
        <if test="mgroup != null and mgroup != '' ">
            and (mu.mgroup = #{mgroup})
        </if>
    </select>

    <select id="selectTicketNumberByOderId" resultType="java.util.Map">
        select ot.id as orderTecketId,ot.orderId,ot.ticketId,ot.ticketNumber,concat(t.ticketType,'*',ot.ticketNumber) as ticketNumberStr,ot.getTicketNumber,
        case when (ot.ticketNumber - ot.getTicketNumber)=0 then '已领票'  when (ot.ticketNumber - ot.getTicketNumber)>0 then concat('剩余',t.ticketType,'*',ot.ticketNumber - ot.getTicketNumber)
        end  getTicketNumberStatus,t.ticketType,t.saving
        from  dc_order_ticket ot LEFT JOIN dc_ticket t on ot.ticketId = t.id
        where ot.orderId = #{orderId}
    </select>

    <select id="selectorderTicketByOderId" resultType="java.util.Map">
        select ot.id as orderTecketId,ot.orderId,ot.ticketId,ot.ticketNumber,ot.getTicketNumber,t.ticketType,t.price/100 as price
        from  dc_order_ticket ot  LEFT JOIN dc_ticket t on ot.ticketId = t.id
        where ot.orderId = #{orderId}
    </select>

    <select id="selectPayMessageAfterPay" resultType="java.util.Map">
        select uo.id,uo.userId,uo.orderName,uo.mhtOrderNo,uo.mhtOrderAmt/100 as mhtOrderAmt,uo.mhtOrderStartTime,uo.channelOrderNo,
        DATE_FORMAT(uo.orderTime,'%Y-%m-%d %H:%i:%s') as orderTime,uo.payedUserId,uo.companyId,
        uo.payTime,uo.payConsumerId,uo.payStatus,uo.meetingId,u.uname,u.mobile,m.meetingName,m.startTime,m.endTime,m.place,m.province,m.city,m.county,m.meetingImage
        from (select * from dc_user_order where payAgain !=2) uo left join  dc_meeting_people u  on uo.payedUserId = u.id left join dc_meeting m on uo.meetingId = m.id
        where uo.mhtOrderNo = #{mhtOrderNo} and uo.meetingId = #{meetingId}
    </select>

    <select id="selectUserTicketsByUserId" resultType="java.util.Map">

        select uo.id,u.id as userId,uo.orderName,uo.mhtOrderNo,uo.mhtOrderAmt/100 as mhtOrderAmt,uo.mhtOrderStartTime,uo.channelOrderNo,
        DATE_FORMAT(uo.orderTime,'%Y-%m-%d %H:%i:%s') as orderTime,uo.companyId,uo.payedUserId,
        uo.payTime,uo.payConsumerId,uo.payStatus,uo.meetingId,u.uname,u.mobile,m.meetingName,m.startTime,m.endTime,m.place,m.province,m.city,m.county,m.meetingImage
        from (select * from dc_user_order where payAgain !=2 and meetingId = #{meetingId}) uo
        LEFT JOIN dc_meeting m on uo.meetingId = m.id  left join dc_user  u
        on uo.payedUserId = u.id where uo.userId = #{userId}

    </select>

</mapper>