<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xkd.mapper.ContractMapper" >
    <insert id="insertContract" >
        INSERT INTO dc_contract
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null"> id, </if>
            <if test="pcCompanyId != null"> pcCompanyId, </if>
            <if test="departmentId != null"> departmentId, </if>
            <if test="companyId != null"> companyId, </if>
            <if test="contractName != null"> contractName, </if>
            <if test="contractNo != null"> contractNo, </if>
            <if test="amount != null"> amount, </if>
            <if test="signDate != null"> signDate, </if>
            <if test="status != null"> status, </if>
            <if test="createdBy != null"> createdBy, </if>
            <if test="createDate != null"> createDate, </if>
            <if test="updatedBy != null"> updatedBy, </if>
            <if test="updateDate != null"> updateDate, </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id}, </if>
            <if test="pcCompanyId != null"> #{pcCompanyId}, </if>
            <if test="departmentId != null"> #{departmentId}, </if>
            <if test="companyId != null"> #{companyId}, </if>
            <if test="contractName != null"> #{contractName}, </if>
            <if test="contractNo != null"> #{contractNo}, </if>
            <if test="amount != null"> #{amount}, </if>
            <if test="signDate != null"> #{signDate}, </if>
            <if test="status != null"> #{status}, </if>
            <if test="createdBy != null"> #{createdBy}, </if>
            <if test="createDate != null"> #{createDate}, </if>
            <if test="updatedBy != null"> #{updatedBy}, </if>
            <if test="updateDate != null"> #{updateDate}, </if>
        </trim>
    </insert>



    <update id="updateContract">
        UPDATE dc_contract
        <set>
            <if test="id != null"> id = #{id}, </if>
            <if test="pcCompanyId != null"> pcCompanyId = #{pcCompanyId}, </if>
            <if test="departmentId != null"> departmentId = #{departmentId}, </if>
            <if test="companyId != null"> companyId = #{companyId}, </if>
            <if test="contractName != null"> contractName = #{contractName}, </if>
            <if test="contractNo != null"> contractNo = #{contractNo}, </if>
            <if test="amount != null"> amount = #{amount}, </if>
            <if test="signDate != null"> signDate = #{signDate}, </if>
            <if test="status != null"> status = #{status}, </if>
            <if test="createdBy != null"> createdBy = #{createdBy}, </if>
            <if test="createDate != null"> createDate = #{createDate}, </if>
            <if test="updatedBy != null"> updatedBy = #{updatedBy}, </if>
            <if test="updateDate != null"> updateDate = #{updateDate} </if>
        </set>
        WHERE id = #{id}
    </update>


    <select id="searchContract" resultType="map">
        SELECT
        c.id,
        c.companyId,
        c.departmentId,
        c.contractNo,
        c.contractName,
        GROUP_CONCAT(a.url) AS urls,
        c.amount,
        DATE_FORMAT(
        c.createDate,
        '%Y-%m-%d %H:%i:%s'
        ) AS createDate,
        c.createdBy,
        u1.uname AS createdByName,
        DATE_FORMAT(
        c.updateDate,
        '%Y-%m-%d %H:%i:%s'
        ) AS updateDate,
        c.updatedBy,
        u2.uname AS updatedByName
        FROM
        dc_contract c
        LEFT JOIN dc_contract_attachement a ON c.id = a.contractId
        LEFT JOIN dc_user u1 ON c.createdBy = u1.id
        LEFT JOIN dc_user u2 ON c.updatedBy = u2.id
        LEFT JOIN dc_company dc ON dc.id = c.companyId
        WHERE c.status=0
       <if test="searchValue!=null and searchValue!=''">
           and c.contractName LIKE '%${searchValue}%'
       </if>
       <if test="endDate!=null">
           AND c.signDate &lt;= #{endDate}
       </if>
      <if test="startDate!=null">
          AND c.signDate > #{startDate}
      </if>
        <if test="departmentIdList!=null and departmentIdList.size!=0">
            and c.departmentId in
            <foreach collection="departmentIdList" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="companyId!=null and companyId!=''">
            and c.companyId=#{companyId}
        </if>
        GROUP BY
        a.contractId
        limit #{start},#{pageSize}
    </select>


    <select id="searchContractCount" resultType="int">
        SELECT
          count(1)
        FROM
        dc_contract c
        WHERE c.status=0
        <if test="searchValue!=null and searchValue!=''">
            and c.contractName LIKE '%${searchValue}%'
        </if>
        <if test="endDate!=null">
            AND c.signDate &lt;= #{endDate}
        </if>
        <if test="startDate!=null">
            AND c.signDate > #{startDate}
        </if>
        <if test="departmentIdList!=null and departmentIdList.size!=0">
            and c.departmentId in
            <foreach collection="departmentIdList" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="companyId!=null and companyId!=''">
            and c.companyId=#{companyId}
        </if>
    </select>


    <update id="deleteContractByIds">
        update dc_contract d set d.status=2 where d.id in
        <foreach collection="idList" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


    <select id="selectByContractNo" resultType="map">
        select * from dc_contract c where c.contractNo=#{contractNo} and c.pcCompanyId=#{pcCompanyId}
    </select>

</mapper>