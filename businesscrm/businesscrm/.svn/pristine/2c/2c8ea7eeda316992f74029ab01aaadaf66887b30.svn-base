<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xkd.mapper.BankPointMapper">


  <select id="selectBankPointsByContent" resultType="java.util.Map">
                  SELECT
                  p.id,
                  p.pointName,
                  p.createdBy,
                  p.updatedBy,
                  dc.departmentId,
                  dc.id as companyId,
                  dc.companyAdviserId,
                  dc.companyDirectorId,
                  dc.createdBy as companyCreatedBy,
                  dc.companyName,
                  DATE_FORMAT(
                  p.createDate,
                  "%Y-%m-%d %H:%i:%s"
                  ) AS createDate,
                  DATE_FORMAT(
                  p.updateDate,
                  "%Y-%m-%d %H:%i:%s"
                  ) AS updateDate,
                  (
                  SELECT
                  count(1)
                  FROM
                  dc_bank_project_point
                  WHERE
                  pointId = p.id and revokeStatus='已关联'
                  ) AS projectTotal,

                  (
                  SELECT
                  count(1)
                  FROM
                  dc_bank_project_point
                  WHERE
                  pointId = p.id and revokeStatus='已撤销'
                  ) AS revokedprojectTotal,
                  (
                  SELECT
                  count(1)
                  FROM
                  dc_user_bank_point
                  WHERE
                  pointId = p.id
                  ) AS totalPersonCount,

                  (
                  SELECT
                  uname
                  FROM
                  dc_user
                  WHERE
                  id = p.createdBy
                  ) AS createdByName,
                  (
                  SELECT
                  uname
                  FROM
                  dc_user
                  WHERE
                  id = p.updatedBy
                  ) AS updatedByName,
                  (
                  SELECT
                  departmentName
                  FROM
                  dc_department
                  WHERE
                  id = dc.departmentId
                  ) AS departmentName
                  FROM
                  dc_bank_point p LEFT join dc_company dc on p.companyId=dc.id
                  WHERE
                  1 = 1
                  AND p.status = 0
      and dc.departmentId in
      <foreach collection="departmentIdList"  item="departmentId" index="" separator=","  open="(" close=")" >
          #{departmentId}
      </foreach>
        <if test="content != null and content != ''">
          and p.pointName like concat("%",#{content},"%")
        </if>
      <if test="companyId!=null">
          and p.companyId=#{companyId}
      </if>
    ORDER BY
         p.updateDate DESC
    limit #{start},#{pageSize}

  </select>

  <select id="selectBankPointsTotalByContent" resultType="java.lang.Integer">

    select count(1)
    from dc_bank_point p LEFT join dc_company dc on p.companyId=dc.id
      where
      p.status=0
      and dc.departmentId in
      <foreach collection="departmentIdList"  item="departmentId" index="" separator=","  open="(" close=")" >
          #{departmentId}
      </foreach>
    <if test="content != null and content != ''">
      and p.pointName like concat("%",#{content},"%")
    </if>
      <if test="companyId!=null">
          and p.companyId=#{companyId}
      </if>


  </select>

  <select id="selectBankPointByName" resultType="java.util.Map">
    select * from dc_bank_point p  left join dc_company dc on  p.companyId=dc.id where p.pointName = #{pointName}  and p.status=0
      and dc.departmentId in
      <foreach collection="departmentIdList"  item="departmentId" index="" separator=","  open="(" close=")" >
          #{departmentId}
      </foreach>
  </select>

  <insert id="saveBankPoint" parameterType="java.util.Map">
    insert into dc_bank_point
    (
       id
      <if test="pointName != null">
       ,pointName
      </if>
      <if test ="createdBy != null ">
        ,createdBy
      </if>
      <if test="createDate != null">
        ,createDate
      </if>
      <if test="updatedBy != null">
        ,updatedBy
      </if>
      <if test="updateDate != null">
        ,updateDate
      </if>
      <if test="companyId != null">
          ,companyId
      </if>

    ) values (

    #{id}
    <if test="pointName != null">,#{pointName}
    </if>
      <if test="createdBy != null">
        ,#{createdBy}
      </if>
      <if test="createDate != null">
        ,#{createDate}
      </if>
      <if test="updatedBy != null">
        ,#{updatedBy}
      </if>
      <if test="updateDate != null">
        ,#{updateDate}
      </if>
      <if test="companyId != null">
          ,#{companyId}
      </if>
    )
  </insert>

  <update id="updateBankPointById" parameterType="java.util.Map">
    update dc_bank_point set
       updateDate = now()
      <if test="pointName != null">
        ,pointName =  #{pointName,jdbcType=VARCHAR}
      </if>
      <if test="createdBy != null">
        ,createdBy = #{createdBy,jdbcType=CHAR}
      </if>
      <if test="updatedBy != null">
        ,updatedBy = #{updatedBy,jdbcType=CHAR}
      </if>
    where id = #{id,jdbcType=CHAR}
  </update>



  <delete id="deleteBankPointByIds">

    delete from dc_bank_point where id in
    <foreach collection="idList"  item="id" index="" separator=","  open="(" close=")" >
        #{id}
    </foreach>

  </delete>

  <update id="updateBankPointStatusByIds">

    update dc_bank_point  p set p.status=2 where p.id in

    <foreach collection="idList"  item="id" index="" separator=","  open="(" close=")" >
      #{id}
    </foreach>

  </update>

  <delete id="deleteProjectPointByPointIds">

    delete from dc_bank_project_point where id in

    <foreach collection="pointIdList"  item="pointId" index="" separator=","  open="(" close=")" >
      #{pointId}
    </foreach>

  </delete>



  <update id="updateBankPointProjectRevokeStatusByPointIds" >

    update dc_bank_project_point  p set p.revokeStatus='已撤销'  where p.id in
        <foreach collection="pointIdList"  item="pointId" index="" separator=","  open="(" close=")" >
          #{pointId}
        </foreach>

  </update>








    <delete id="deleteProjectPointByProjectIds">

      delete from dc_bank_project_point where bankProjectId in

      <foreach collection="projectIdList"  item="projectId" index="" separator=","  open="(" close=")" >
        #{projectId}
      </foreach>

    </delete>


  <update id="updateProjectPointRevokeStatusByProjectIds">
    update dc_bank_project_point  p set p.revokeStatus='已撤销'  where p.bankProjectId in
    <foreach collection="projectIdList"  item="projectId" index="" separator=","  open="(" close=")" >
      #{projectId}
    </foreach>

  </update>


</mapper>