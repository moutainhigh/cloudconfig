<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.2.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tool
        http://www.springframework.org/schema/tool/spring-tool.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">



	<!--=======================spring mvc配置============================= -->
	<mvc:annotation-driven />
	<context:annotation-config />
	<context:component-scan base-package="com.xkd" />
	<mvc:default-servlet-handler />




	<!--=======================资源解析器配置============================= -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>



	<!--=======================spring 拦截器配置============================= -->
	<mvc:interceptors>

		<mvc:interceptor>
			<mvc:mapping path="/oldApi/**" />
			<bean class="com.xkd.utils.OldApiProxyFilter"></bean>
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/*/**" />
			<bean class="com.xkd.utils.LoginFilter"></bean>
		</mvc:interceptor>

	</mvc:interceptors>



	<!--============================任务配置================================ -->
	<task:annotation-driven executor="concurrentExecutor"
		scheduler="concurrentScheduler" />
	<task:scheduler id="concurrentScheduler" pool-size="4" />
	<task:executor id="concurrentExecutor" pool-size="4"
		queue-capacity="100" />



	<!--============================属性占位符处理器配置================================ -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:database.properties</value>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>





	<!--============================JSON 映射处理器配置================================ -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
		p:ignoreDefaultModelOnRedirect="true">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			</list>
		</property>
	</bean>




	<!--============================数据源配置================================ -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>





	<!--============================mybatis配置================================ -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.xkd.model" />
		<property name="configLocation" value="classpath:Configuration.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xkd.mapper" />
	</bean>


	<!--============================事务配置================================ -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!--============================redis配置================================ -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}"></property>
		<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"></property>
		<property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"></property>
		<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}"></property>
	</bean>
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		destroy-method="destroy">
		<property name="poolConfig" ref="jedisPoolConfig"></property>
		<property name="hostName" value="${redis.hostName}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="timeout" value="${redis.timeout}"></property>
		<property name="usePool" value="${redis.usePool}"></property>
		<property name="password" value="${redis.password}"></property>
	</bean>
	<bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"/>
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="HashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
		<property name="HashValueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
	</bean>




	<!--============================文件上传配置================================ -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="409600" />
	</bean>




    <!--swagger 配置-->
	<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

	<!--activiti  工作流配置-->
	<bean id="processEngineConfiguration"  class="org.activiti.spring.SpringProcessEngineConfiguration" >
		<property name="dataSource" ref="dataSource"/>
		<property name="jobExecutorActivate" value="false"/>
		<property name="databaseSchemaUpdate" value="true"/>
		<property name="transactionManager" ref="transactionManager"/>
		<!--<property name="deploymentResources" value="classpath*:/com/springapp/bpmns/*.bpmn"/>-->
		<!--邮件任务配置-->
		<property name="mailServerHost" value="smtp.yeah.net"/>
		<property name="mailServerPort" value="25"/>
		<property name="mailServerUsername" value="wujianhui321@yeah.net"/>
		<property name="mailServerPassword" value="a7089221"/>
		<property name="labelFontName" value="宋体"></property>
		<property name="activityFontName" value="宋体"></property>
	</bean>
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean" >
		<property name="processEngineConfiguration" ref="processEngineConfiguration"/>
	</bean>
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>
	<bean id="identityService"  factory-bean="processEngine" factory-method="getIdentityService"/>
</beans>



