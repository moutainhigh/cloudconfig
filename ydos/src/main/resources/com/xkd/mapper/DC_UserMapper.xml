<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xkd.mapper.DC_UserMapper" >
  <resultMap id="BaseResultMap" type="DC_User" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="weixin" property="weixin" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="update_Date" property="updateDate" jdbcType="VARCHAR" />
    <result column="userLogo" property="userLogo" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="updateDate" property="updateDate" jdbcType="VARCHAR" />
    <result column="unionId" property="unionId" jdbcType="VARCHAR" />
    <result column="nickName" property="nickName" jdbcType="VARCHAR" />
    <result column="platform" property="platform" jdbcType="VARCHAR" />
    
    
    
  </resultMap>
  <sql id="Base_Column_List" >
   		ID,uname,weixin,mobile,userLogo
  </sql>
  <select id="getUserByObj" parameterType="DC_User" resultMap="BaseResultMap">
  
  	select ID,uname,weixin,mobile,unionId,userLogo,status,nickName,platform,pcCompanyId,roleId from DC_USER where 1 =1
  	
  	<if test="ttype == 1">
  		and mobile = #{id,jdbcType=VARCHAR} 
  	</if>
  	
  	<if test="ttype == 2">
  		and weixin = #{id,jdbcType=VARCHAR} 
  	</if>
  	
  	<if test="ttype == 3">
  		and unionId = #{id,jdbcType=VARCHAR} 
  	</if>
  	
  </select>
  
  <insert id="saveUser" parameterType="DC_User" keyProperty="id" useGeneratedKeys="true">
    insert into DC_USER (id,uname,weixin,mobile,sex,userLogo,unionId,updateDate,createdBy,updatedBy,createDate,platform)
    
    values (
    		#{id},
    		#{uname,jdbcType=VARCHAR},
    		#{weixin,jdbcType=VARCHAR}, 
    		#{mobile,jdbcType=VARCHAR},
    		#{sex,jdbcType=VARCHAR},
    		#{userLogo,jdbcType=VARCHAR},
    		#{unionId,jdbcType=VARCHAR},
    		now(),
    		#{id},
    		#{id},
    		now(),
    		'0'
    )
  </insert>
  <insert id="saveUserDetail" parameterType="DC_User" keyProperty="id" useGeneratedKeys="true">
    insert into dc_user_detail (id,updateDate,createdBy,updatedBy,createDate)
    
    values (
    		#{id},
    		now(),
    		#{id},
    		#{id},
    		now()
    )
  </insert>
  
  <update id="editMeetingUser">
  	
  	update dc_meeting_user set 
  		status = #{status},
  		attendmeetingTime = now()
  	where id = #{id}
  </update>

	<update id="editUserDetail">

		update dc_user_detail
		<trim prefix="set" suffixOverrides=",">
			<if test="companyName!=null">companyName = #{companyName},</if>
			<if test="profession!=null">profession = #{profession},</if>
			<if test="email!=null">email = #{email},</if>
			<if test="updatedBy!=null">updatedBy = #{updatedBy},</if>
			<if test="mobile!=null">mobile = #{mobile},</if>
		</trim>
		where id = #{id}
	</update>

  <update id="editUser" parameterType="DC_User">
  	update DC_USER
	  	<trim prefix="set" suffixOverrides=",">
		  <if test="uname!=null">uname = #{uname},</if>
		  <if test="mobile!=null">mobile = #{mobile},</if>
		  <if test="weixin!=null">weixin = #{weixin},</if>
		  <if test="unionId!=null">unionId = #{unionId},</if>
		  <if test="userLogo!=null">userLogo = #{userLogo},</if>
		  <if test="platform!=null">platform = #{platform},</if>

	 	</trim>
	 where id = #{id}
  </update>
  
  
  <update id="editCompany" parameterType="DC_User">
  	update dc_company  
	  	set status = #{status}
	 where id = #{id}
  </update>
 
 
  
   <insert id="saveCompany" parameterType="java.util.HashMap">
    insert into dc_company (
    	id,companyName,status,createdBy,createDate,updatedBy,updateDate
    	)values (
    	#{id},#{companyName},0,#{createdBy},now(),#{createdBy},now()
    )
  </insert>
  
  <insert id="saveCompanyDetail" parameterType="java.util.HashMap">
    insert into dc_company_detail (
    	id,createdBy,createDate,updatedBy,updateDate
    	)values (
    	#{id},#{createdBy},now(),#{createdBy},now()
    )
  </insert>
  
  <insert id="saveMeetingUser" parameterType="java.util.HashMap">
    insert into dc_meeting_user 
    	(id,companyId,userId,meetingId,enrollTime,status,createdBy,createDate,updatedBy,updateDate)
    values 
   		(UUID(),#{companyid},#{userId},#{meetingid},now(),#{status},#{userId},now(),#{userId},now())
  </insert>
  
  <insert id="saveUserCompany" parameterType="java.util.HashMap">
    replace into dc_user_company(
    	id,userid,companyId,createdBy,createDate
    )values(
    	UUID(),#{userid},#{companyid},#{userid},now()
    )
  </insert>
  
  <select id="checkUserToMeeting" resultType="java.util.HashMap">
  	select 
  		mu.id,mu.userId,mu.companyId,mu.status,mu.mgroup,u.uname adviser_name,u.userLogo imgpath 
  	from dc_meeting_user mu 
  		LEFT JOIN dc_user u on u.id = mu.userId 
  	where mu.userId = #{uid} and mu.meetingId = #{meetingId} and u.status = 0 limit 1
  </select>
  
  <select id="getSignInfo" resultType="java.util.HashMap">
  	select 
  		mu.mgroup,u.uname adviser_name,u.userLogo imgpath 
  	from dc_meeting_user mu 
		LEFT JOIN dc_company c on c.id = mu.companyId 
  		LEFT JOIN dc_user u on u.id = c.companyAdviserId 
  	where mu.userId = #{userId} and mu.meetingId = #{meetingId} and u.status = 0 limit 1
  </select>
  
  <select id="selectUserAttendMeetingBaseInfos" resultType="java.util.HashMap">
 	
	SELECT
	u.uname,
	u.mobile,
	c.companyName,
	c.province,
	c.city,
	c.county,
	uc.station,
	cd.establishTime,
	c.parentIndustryId,
	c.sonIndustry,
	cd.manageScope,
	cd.companySize,
	cd.annualSalesVolume,
	cd.annualProfit,
	cd.companyPropertyId,
	m.learnStatus,
	m.need,
	m.needDetail,
	m.id AS meetingUserId,
	c.id AS companyId,
	u.id AS userId,
	m.id AS meetingUserId,
	(select useFlag from dc_meeting_hotel where meetingId = m.meetingId) as useFlag,
	uh.startTime,uh.endTime,uh.roomNumber,uh.bigRoomNumber,TIMESTAMPDIFF(DAY,uh.startTime,uh.endTime)dates,
	uh.hotelId,mh.hotelName,
	CASE when uh.bigRoomNumber >0 and uh.roomNumber >0 then CONCAT(CONCAT('标准间 ',uh.roomNumber,' 间'),' ',CONCAT('大床房 ',uh.bigRoomNumber,' 间')) when uh.bigRoomNumber >0 then CONCAT('标准间 ',uh.bigRoomNumber,' 间')
	when uh.roomNumber >0 then CONCAT('标准间 ',uh.roomNumber,' 间') end roomDes
	FROM
	(select * from dc_user where mobile = #{mobile}) u
	LEFT JOIN (select * from dc_meeting_user where meetingId = #{meetingId}) m ON m.userId = u.id
	LEFT JOIN  dc_user_hotel uh ON  m.id = uh.meetingUserId
	LEFT JOIN  dc_meeting_hotel mh on uh.hotelId = mh.id
	LEFT JOIN dc_user_company uc ON u.id = uc.userId
	AND m.companyId = uc.companyId
	LEFT JOIN dc_company c ON c.id = m.companyId
	LEFT JOIN dc_company_detail cd ON c.id = cd.id
	WHERE
	c.status = 0
 	
  </select>

	<select id="selectUserAndHotelSetingByMobile" resultType="java.util.HashMap">
		select *,
		(select useFlag from dc_meeting_hotel h where meetingId =#{meetingId} limit 1) as useFlag
		from dc_user where mobile = #{mobile} and status = 0
	</select>
 
 <select id="getUserById"  resultMap="BaseResultMap">
  
  	select ID,uname,weixin,mobile,userLogo,unionId,status,nickName,email from DC_USER where id =#{id}
  	
 </select>
 
  <select id="getCompanyById"  resultType="java.util.HashMap">
  
  	select id,companyName,status,channel,userType,companyAdviserId,companyDirectorId from dc_company where 1 =1
  	<if test="companyName !=null">
 		and companyName = #{companyName}
 	</if>
 	<if test="id !=null">
 		and id = #{id}
 	</if>
  	limit 1
 </select>
 <select id="userCompanyList"  resultType="java.util.HashMap">
  
  	select 
  		c.companyName 
  	from dc_user_company uc 
  		LEFT JOIN dc_company c on c.id = uc.companyId 
  		LEFT JOIN dc_user u on  u.id = uc.userId 
  	where uc.userId = #{id} and c.status = 0 and u.status = 0
 </select>
 
 
 <select id="getAnswerUser"  resultMap="BaseResultMap">
  select 
  	u.id,u.uname,ue.submitDate update_date 
  from dc_wj_user_exam  ue 
  	LEFT JOIN dc_user u on u.weixin = ue.openId 
  where ue.exerciseId = #{id} and ue.openId = #{userId} ORDER BY ue.submitDate desc limit 1
 </select>

	<select id="selectUserCompanys"  resultType="java.util.Map">
		select u.id as userId,c.id as companyId,c.companyName from (select
		* from dc_user where id = #{userId} and status = 0) u INNER JOIN dc_user_company uc
		on u.id = uc.userId INNER JOIN dc_company c on uc.companyId = c.id where c.status = 0
	</select>


</mapper>